HISTOPATHOLOGY AUTOENCODER - COMPREHENSIVE VISUALIZATION REPORT
Generated on: 2025-07-22 13:00:21
====================================================================================================

========================================================================================================================
MODEL COMPARISON - BASIC vs DEEP AUTOENCODER
========================================================================================================================
Metric                         Basic Autoencoder         Deep Autoencoder         
--------------------------------------------------------------------------------
Architecture                   U-Net with skip conn.     ResNet + U-Net           
Total Parameters               34,544,963                133,288,259              
Model Size (MB)                131.8                     508.5                    
Depth                          8 layers                  12+ layers               
Skip Connections               Yes                       Yes + Residual           
Best for                       Quick training            Complex patterns         
Training Time                  Faster                    Slower                   
Memory Usage                   Lower                     Higher                   
Recommended Use                256x256 patches           512x512+ patches         

PERFORMANCE CHARACTERISTICS:
--------------------------------------------------
Basic Autoencoder:
  ✓ Faster training and inference
  ✓ Lower memory requirements
  ✓ Good for standard denoising tasks
  ✓ Suitable for limited GPU resources

Deep Autoencoder:
  ✓ Better feature extraction
  ✓ Handles complex tissue patterns
  ✓ Superior for high-resolution images
  ✓ More robust to various noise types



====================================================================================================
ARCHITECTURE MAP - BASIC AUTOENCODER
====================================================================================================
Model Type: HistoAutoencoder
Input Shape: (1, 3, 256, 256)
Total Parameters: 34,544,963
Trainable Parameters: 34,544,963
Model Size: 131.78 MB

LAYER-BY-LAYER BREAKDOWN:
----------------------------------------------------------------------------------------------------
Layer Name                     Type                 Input Shape               Output Shape              Params    
----------------------------------------------------------------------------------------------------
encoder1.0                     Conv2d               [(1, 3, 256, 256)]        (1, 64, 256, 256)         1792      
encoder1.1                     BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
encoder1.2                     LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
encoder1.3                     Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
encoder1.4                     BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
encoder1.5                     LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
encoder1.6                     MaxPool2d            [(1, 64, 256, 256)]       (1, 64, 128, 128)         0         
encoder2.0                     Conv2d               [(1, 64, 128, 128)]       (1, 128, 128, 128)        73856     
encoder2.1                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder2.2                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
encoder2.3                     Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
encoder2.4                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder2.5                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
encoder2.6                     MaxPool2d            [(1, 128, 128, 128)]      (1, 128, 64, 64)          0         
encoder3.0                     Conv2d               [(1, 128, 64, 64)]        (1, 256, 64, 64)          295168    
encoder3.1                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder3.2                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
encoder3.3                     Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
encoder3.4                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder3.5                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
encoder3.6                     MaxPool2d            [(1, 256, 64, 64)]        (1, 256, 32, 32)          0         
encoder4.0                     Conv2d               [(1, 256, 32, 32)]        (1, 512, 32, 32)          1180160   
encoder4.1                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder4.2                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
encoder4.3                     Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
encoder4.4                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder4.5                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
encoder4.6                     MaxPool2d            [(1, 512, 32, 32)]        (1, 512, 16, 16)          0         
bottleneck.0                   Conv2d               [(1, 512, 16, 16)]        (1, 1024, 16, 16)         4719616   
bottleneck.1                   BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.2                   LeakyReLU            [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         0         
bottleneck.3                   Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.4                   BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.5                   LeakyReLU            [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         0         
decoder4.0                     ConvTranspose2d      [(1, 1024, 16, 16)]       (1, 512, 32, 32)          8389120   
decoder4.1                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
decoder4.2                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
decoder4.3                     Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
decoder4.4                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
decoder4.5                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
decoder3.0                     ConvTranspose2d      [(1, 768, 32, 32)]        (1, 256, 64, 64)          3145984   
decoder3.1                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
decoder3.2                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
decoder3.3                     Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
decoder3.4                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
decoder3.5                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
decoder2.0                     ConvTranspose2d      [(1, 384, 64, 64)]        (1, 128, 128, 128)        786560    
decoder2.1                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
decoder2.2                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
decoder2.3                     Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
decoder2.4                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
decoder2.5                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
decoder1.0                     ConvTranspose2d      [(1, 192, 128, 128)]      (1, 64, 256, 256)         196672    
decoder1.1                     BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
decoder1.2                     LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
decoder1.3                     Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
decoder1.4                     BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
decoder1.5                     LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
final.0                        Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
final.1                        BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
final.2                        LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
final.3                        Conv2d               [(1, 64, 256, 256)]       (1, 3, 256, 256)          195       
final.4                        Sigmoid              [(1, 3, 256, 256)]        (1, 3, 256, 256)          0         
----------------------------------------------------------------------------------------------------
Estimated Forward Pass Memory: 423.00 MB



====================================================================================================
DATA FLOW MAP - BASIC AUTOENCODER
====================================================================================================

    INPUT: [B, 3, 256, 256] - RGB Histology Image
         │
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              ENCODER PATHWAY                                    │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ENC1: [B, 3, 256, 256] → [B, 64, 128, 128]   ┐
         │ Conv3x3 + BN + LeakyReLU + MaxPool     │ SKIP
         ▼                                        │ CONNECTION
    ENC2: [B, 64, 128, 128] → [B, 128, 64, 64]   │     ┐
         │ Conv3x3 + BN + LeakyReLU + MaxPool     │     │ SKIP
         ▼                                        │     │ CONNECTION
    ENC3: [B, 128, 64, 64] → [B, 256, 32, 32]    │     │     ┐
         │ Conv3x3 + BN + LeakyReLU + MaxPool     │     │     │ SKIP
         ▼                                        │     │     │ CONNECTION
    ENC4: [B, 256, 32, 32] → [B, 512, 16, 16]    │     │     │     ┐
         │ Conv3x3 + BN + LeakyReLU + MaxPool     │     │     │     │ SKIP
         ▼                                        │     │     │     │ CONNECTION
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              BOTTLENECK                                        │
    │ [B, 512, 16, 16] → [B, 1024, 16, 16] → [B, 1024, 16, 16]                     │
    │ Conv3x3 + BN + LeakyReLU + Conv3x3 + BN + LeakyReLU                           │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              DECODER PATHWAY                                   │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    DEC4: [B, 1024, 16, 16] → [B, 512, 32, 32] ←─┘     │     │     │
         │ ConvTranspose + BN + LeakyReLU              │     │     │
         │ + Skip Connection [B, 512, 32, 32]          │     │     │
         │ = [B, 1024, 32, 32] → [B, 512, 32, 32]      │     │     │
         ▼                                              │     │     │
    DEC3: [B, 768, 32, 32] → [B, 256, 64, 64] ←────────┘     │     │
         │ ConvTranspose + BN + LeakyReLU                    │     │
         │ + Skip Connection [B, 256, 64, 64]                │     │
         │ = [B, 512, 64, 64] → [B, 256, 64, 64]             │     │
         ▼                                                    │     │
    DEC2: [B, 384, 64, 64] → [B, 128, 128, 128] ←───────────┘     │
         │ ConvTranspose + BN + LeakyReLU                          │
         │ + Skip Connection [B, 128, 128, 128]                    │
         │ = [B, 256, 128, 128] → [B, 128, 128, 128]               │
         ▼                                                          │
    DEC1: [B, 192, 128, 128] → [B, 64, 256, 256] ←───────────────┘
         │ ConvTranspose + BN + LeakyReLU
         │ + Skip Connection [B, 64, 256, 256]
         │ = [B, 128, 256, 256] → [B, 64, 256, 256]
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              FINAL LAYER                                       │
    │ [B, 64, 256, 256] → [B, 64, 256, 256] → [B, 3, 256, 256]                     │
    │ Conv3x3 + BN + LeakyReLU + Conv1x1 + Sigmoid                                   │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    OUTPUT: [B, 3, 256, 256] - Denoised RGB Image
    
    Key:
    B = Batch Size
    Conv3x3 = 3x3 Convolution
    ConvTranspose = Transposed Convolution (Upsampling)
    BN = Batch Normalization
    Skip Connection = Features from encoder concatenated to decoder
    



====================================================================================================
PARAMETER BREAKDOWN - BASIC AUTOENCODER
====================================================================================================
COMPONENT-WISE PARAMETER COUNT:
--------------------------------------------------------------------------------
ENCODER      encoder1.0                                      1,792
ENCODER      encoder1.1                                        128
ENCODER      encoder1.3                                     36,928
ENCODER      encoder1.4                                        128
ENCODER      encoder2.0                                     73,856
ENCODER      encoder2.1                                        256
ENCODER      encoder2.3                                    147,584
ENCODER      encoder2.4                                        256
ENCODER      encoder3.0                                    295,168
ENCODER      encoder3.1                                        512
ENCODER      encoder3.3                                    590,080
ENCODER      encoder3.4                                        512
ENCODER      encoder4.0                                  1,180,160
ENCODER      encoder4.1                                      1,024
ENCODER      encoder4.3                                  2,359,808
ENCODER      encoder4.4                                      1,024
BOTTLENECK   bottleneck.0                                4,719,616
BOTTLENECK   bottleneck.1                                    2,048
BOTTLENECK   bottleneck.3                                9,438,208
BOTTLENECK   bottleneck.4                                    2,048
DECODER      decoder4.0                                  8,389,120
DECODER      decoder4.1                                      1,024
DECODER      decoder4.3                                  2,359,808
DECODER      decoder4.4                                      1,024
DECODER      decoder3.0                                  3,145,984
DECODER      decoder3.1                                        512
DECODER      decoder3.3                                    590,080
DECODER      decoder3.4                                        512
DECODER      decoder2.0                                    786,560
DECODER      decoder2.1                                        256
DECODER      decoder2.3                                    147,584
DECODER      decoder2.4                                        256
DECODER      decoder1.0                                    196,672
DECODER      decoder1.1                                        128
DECODER      decoder1.3                                     36,928
DECODER      decoder1.4                                        128
FINAL        final.0                                        36,928
FINAL        final.1                                           128
FINAL        final.3                                           195
--------------------------------------------------------------------------------
ENCODER TOTAL:                                           4,689,216
BOTTLENECK TOTAL:                                       14,161,920
DECODER TOTAL:                                          15,656,576
FINAL LAYER TOTAL:                                          37,251
--------------------------------------------------------------------------------
GRAND TOTAL:                                            34,544,963

PARAMETER DISTRIBUTION:
----------------------------------------
Encoder:     13.6%
Bottleneck:  41.0%
Decoder:     45.3%
Final:        0.1%



====================================================================================================
MEMORY ANALYSIS - BASIC AUTOENCODER
====================================================================================================
Analysis for batch size: 8

Model Parameters Memory: 131.78 MB
Input Tensor Memory: 6.00 MB
Output Tensor Memory: 6.00 MB
Encoder 1 Activations: 32.00 MB
Encoder 2 Activations: 16.00 MB
Encoder 3 Activations: 8.00 MB
Encoder 4 Activations: 4.00 MB
Bottleneck Activations: 8.00 MB
Decoder 1 Activations: 16.00 MB
Decoder 2 Activations: 32.00 MB
Decoder 3 Activations: 64.00 MB
Decoder 4 Activations: 128.00 MB

Total Intermediate Activations: 308.00 MB

TRAINING MEMORY BREAKDOWN:
----------------------------------------
Model Parameters: 131.78 MB
Gradients: 131.78 MB
Optimizer States: 263.56 MB
Input/Output: 12.00 MB
Intermediate Activations: 308.00 MB
----------------------------------------
Total Training Memory: 847.11 MB
Total Training Memory: 0.83 GB

INFERENCE MEMORY BREAKDOWN:
----------------------------------------
Total Inference Memory: 451.78 MB
Total Inference Memory: 0.44 GB

RECOMMENDED GPU MEMORY:
----------------------------------------
Minimum for Training: 0.8 GB
Recommended for Training: 1.2 GB
Minimum for Inference: 0.4 GB

====================================================================================================

====================================================================================================
ARCHITECTURE MAP - DEEP AUTOENCODER
====================================================================================================
Model Type: DeepHistoAutoencoder
Input Shape: (1, 3, 256, 256)
Total Parameters: 133,288,259
Trainable Parameters: 133,288,259
Model Size: 508.45 MB

LAYER-BY-LAYER BREAKDOWN:
----------------------------------------------------------------------------------------------------
Layer Name                     Type                 Input Shape               Output Shape              Params    
----------------------------------------------------------------------------------------------------
initial.0                      Conv2d               [(1, 3, 256, 256)]        (1, 64, 256, 256)         9472      
initial.1                      BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
initial.2                      LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
encoder1.0                     Conv2d               [(1, 64, 256, 256)]       (1, 128, 128, 128)        73856     
encoder1.1                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder1.2                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
encoder1.3.conv1               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
encoder1.3.bn1                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder1.3.conv2               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
encoder1.3.bn2                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder1.4.conv1               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
encoder1.4.bn1                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder1.4.conv2               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
encoder1.4.bn2                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
encoder2.0                     Conv2d               [(1, 128, 128, 128)]      (1, 256, 64, 64)          295168    
encoder2.1                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder2.2                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
encoder2.3.conv1               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
encoder2.3.bn1                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder2.3.conv2               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
encoder2.3.bn2                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder2.4.conv1               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
encoder2.4.bn1                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder2.4.conv2               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
encoder2.4.bn2                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
encoder3.0                     Conv2d               [(1, 256, 64, 64)]        (1, 512, 32, 32)          1180160   
encoder3.1                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder3.2                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
encoder3.3.conv1               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
encoder3.3.bn1                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder3.3.conv2               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
encoder3.3.bn2                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder3.4.conv1               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
encoder3.4.bn1                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder3.4.conv2               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
encoder3.4.bn2                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
encoder4.0                     Conv2d               [(1, 512, 32, 32)]        (1, 1024, 16, 16)         4719616   
encoder4.1                     BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
encoder4.2                     LeakyReLU            [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         0         
encoder4.3.conv1               Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
encoder4.3.bn1                 BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
encoder4.3.conv2               Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
encoder4.3.bn2                 BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
encoder4.4.conv1               Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
encoder4.4.bn1                 BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
encoder4.4.conv2               Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
encoder4.4.bn2                 BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.0.conv1             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.0.bn1               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.0.conv2             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.0.bn2               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.1.conv1             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.1.bn1               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.1.conv2             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.1.bn2               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.2.conv1             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.2.bn1               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
bottleneck.2.conv2             Conv2d               [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         9438208   
bottleneck.2.bn2               BatchNorm2d          [(1, 1024, 16, 16)]       (1, 1024, 16, 16)         2048      
decoder4.0                     ConvTranspose2d      [(1, 1024, 16, 16)]       (1, 512, 32, 32)          8389120   
decoder4.1                     BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
decoder4.2                     LeakyReLU            [(1, 512, 32, 32)]        (1, 512, 32, 32)          0         
decoder4.3.conv1               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
decoder4.3.bn1                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
decoder4.3.conv2               Conv2d               [(1, 512, 32, 32)]        (1, 512, 32, 32)          2359808   
decoder4.3.bn2                 BatchNorm2d          [(1, 512, 32, 32)]        (1, 512, 32, 32)          1024      
decoder3.0                     ConvTranspose2d      [(1, 1024, 32, 32)]       (1, 256, 64, 64)          4194560   
decoder3.1                     BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
decoder3.2                     LeakyReLU            [(1, 256, 64, 64)]        (1, 256, 64, 64)          0         
decoder3.3.conv1               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
decoder3.3.bn1                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
decoder3.3.conv2               Conv2d               [(1, 256, 64, 64)]        (1, 256, 64, 64)          590080    
decoder3.3.bn2                 BatchNorm2d          [(1, 256, 64, 64)]        (1, 256, 64, 64)          512       
decoder2.0                     ConvTranspose2d      [(1, 512, 64, 64)]        (1, 128, 128, 128)        1048704   
decoder2.1                     BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
decoder2.2                     LeakyReLU            [(1, 128, 128, 128)]      (1, 128, 128, 128)        0         
decoder2.3.conv1               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
decoder2.3.bn1                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
decoder2.3.conv2               Conv2d               [(1, 128, 128, 128)]      (1, 128, 128, 128)        147584    
decoder2.3.bn2                 BatchNorm2d          [(1, 128, 128, 128)]      (1, 128, 128, 128)        256       
decoder1.0                     ConvTranspose2d      [(1, 256, 128, 128)]      (1, 64, 256, 256)         262208    
decoder1.1                     BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
decoder1.2                     LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
decoder1.3.conv1               Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
decoder1.3.bn1                 BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
decoder1.3.conv2               Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
decoder1.3.bn2                 BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
final.0                        Conv2d               [(1, 64, 256, 256)]       (1, 64, 256, 256)         36928     
final.1                        BatchNorm2d          [(1, 64, 256, 256)]       (1, 64, 256, 256)         128       
final.2                        LeakyReLU            [(1, 64, 256, 256)]       (1, 64, 256, 256)         0         
final.3                        Conv2d               [(1, 64, 256, 256)]       (1, 3, 256, 256)          195       
final.4                        Sigmoid              [(1, 3, 256, 256)]        (1, 3, 256, 256)          0         
----------------------------------------------------------------------------------------------------
Estimated Forward Pass Memory: 484.50 MB



====================================================================================================
DATA FLOW MAP - DEEP AUTOENCODER
====================================================================================================

    INPUT: [B, 3, 256, 256] - RGB Histology Image
         │
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              ENCODER PATHWAY                                    │
    │                           (With Residual Blocks)                               │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ENC1: [B, 3, 256, 256] → [B, 64, 128, 128]     ┐
         │ ResBlock + Downsample                   │ SKIP
         │ (Conv + BN + ReLU + Conv + BN) + Pool   │ CONNECTION
         ▼                                         │
    ENC2: [B, 64, 128, 128] → [B, 128, 64, 64]     │     ┐
         │ ResBlock + Downsample                   │     │ SKIP
         ▼                                         │     │ CONNECTION
    ENC3: [B, 128, 64, 64] → [B, 256, 32, 32]      │     │     ┐
         │ ResBlock + Downsample                   │     │     │ SKIP
         ▼                                         │     │     │ CONNECTION
    ENC4: [B, 256, 32, 32] → [B, 512, 16, 16]      │     │     │     ┐
         │ ResBlock + Downsample                   │     │     │     │ SKIP
         ▼                                         │     │     │     │ CONNECTION
    ENC5: [B, 512, 16, 16] → [B, 1024, 8, 8]       │     │     │     │     ┐
         │ ResBlock + Downsample                   │     │     │     │     │ SKIP
         ▼                                         │     │     │     │     │ CONNECTION
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              BOTTLENECK                                        │
    │ [B, 1024, 8, 8] → Multiple ResBlocks → [B, 1024, 8, 8]                       │
    │ Deeper feature processing with residual connections                             │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              DECODER PATHWAY                                   │
    │                           (With Residual Blocks)                               │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    DEC5: [B, 1024, 8, 8] → [B, 512, 16, 16] ←──────┘     │     │     │     │
         │ ResBlock + Upsample + Skip                      │     │     │     │
         ▼                                                 │     │     │     │
    DEC4: [B, 1024, 16, 16] → [B, 256, 32, 32] ←─────────┘     │     │     │
         │ ResBlock + Upsample + Skip                            │     │     │
         ▼                                                       │     │     │
    DEC3: [B, 512, 32, 32] → [B, 128, 64, 64] ←───────────────┘     │     │
         │ ResBlock + Upsample + Skip                                │     │
         ▼                                                           │     │
    DEC2: [B, 256, 64, 64] → [B, 64, 128, 128] ←─────────────────────┘     │
         │ ResBlock + Upsample + Skip                                      │
         ▼                                                                 │
    DEC1: [B, 128, 128, 128] → [B, 64, 256, 256] ←─────────────────────────┘
         │ ResBlock + Upsample + Skip
         ▼
    ┌─────────────────────────────────────────────────────────────────────────────────┐
    │                              FINAL LAYER                                       │
    │ [B, 64, 256, 256] → [B, 3, 256, 256]                                          │
    │ Conv1x1 + Sigmoid                                                               │
    └─────────────────────────────────────────────────────────────────────────────────┘
         │
         ▼
    OUTPUT: [B, 3, 256, 256] - Denoised RGB Image
    
    Key:
    ResBlock = Residual Block (Conv + BN + ReLU + Conv + BN + Skip)
    Deeper network with more feature extraction capability
    Better for complex histopathology patterns
    



====================================================================================================
PARAMETER BREAKDOWN - DEEP AUTOENCODER
====================================================================================================
COMPONENT-WISE PARAMETER COUNT:
--------------------------------------------------------------------------------
OTHER        initial.0                                       9,472
OTHER        initial.1                                         128
ENCODER      encoder1.0                                     73,856
ENCODER      encoder1.1                                        256
ENCODER      encoder1.3.conv1                              147,584
ENCODER      encoder1.3.bn1                                    256
ENCODER      encoder1.3.conv2                              147,584
ENCODER      encoder1.3.bn2                                    256
ENCODER      encoder1.4.conv1                              147,584
ENCODER      encoder1.4.bn1                                    256
ENCODER      encoder1.4.conv2                              147,584
ENCODER      encoder1.4.bn2                                    256
ENCODER      encoder2.0                                    295,168
ENCODER      encoder2.1                                        512
ENCODER      encoder2.3.conv1                              590,080
ENCODER      encoder2.3.bn1                                    512
ENCODER      encoder2.3.conv2                              590,080
ENCODER      encoder2.3.bn2                                    512
ENCODER      encoder2.4.conv1                              590,080
ENCODER      encoder2.4.bn1                                    512
ENCODER      encoder2.4.conv2                              590,080
ENCODER      encoder2.4.bn2                                    512
ENCODER      encoder3.0                                  1,180,160
ENCODER      encoder3.1                                      1,024
ENCODER      encoder3.3.conv1                            2,359,808
ENCODER      encoder3.3.bn1                                  1,024
ENCODER      encoder3.3.conv2                            2,359,808
ENCODER      encoder3.3.bn2                                  1,024
ENCODER      encoder3.4.conv1                            2,359,808
ENCODER      encoder3.4.bn1                                  1,024
ENCODER      encoder3.4.conv2                            2,359,808
ENCODER      encoder3.4.bn2                                  1,024
ENCODER      encoder4.0                                  4,719,616
ENCODER      encoder4.1                                      2,048
ENCODER      encoder4.3.conv1                            9,438,208
ENCODER      encoder4.3.bn1                                  2,048
ENCODER      encoder4.3.conv2                            9,438,208
ENCODER      encoder4.3.bn2                                  2,048
ENCODER      encoder4.4.conv1                            9,438,208
ENCODER      encoder4.4.bn1                                  2,048
ENCODER      encoder4.4.conv2                            9,438,208
ENCODER      encoder4.4.bn2                                  2,048
BOTTLENECK   bottleneck.0.conv1                          9,438,208
BOTTLENECK   bottleneck.0.bn1                                2,048
BOTTLENECK   bottleneck.0.conv2                          9,438,208
BOTTLENECK   bottleneck.0.bn2                                2,048
BOTTLENECK   bottleneck.1.conv1                          9,438,208
BOTTLENECK   bottleneck.1.bn1                                2,048
BOTTLENECK   bottleneck.1.conv2                          9,438,208
BOTTLENECK   bottleneck.1.bn2                                2,048
BOTTLENECK   bottleneck.2.conv1                          9,438,208
BOTTLENECK   bottleneck.2.bn1                                2,048
BOTTLENECK   bottleneck.2.conv2                          9,438,208
BOTTLENECK   bottleneck.2.bn2                                2,048
DECODER      decoder4.0                                  8,389,120
DECODER      decoder4.1                                      1,024
DECODER      decoder4.3.conv1                            2,359,808
DECODER      decoder4.3.bn1                                  1,024
DECODER      decoder4.3.conv2                            2,359,808
DECODER      decoder4.3.bn2                                  1,024
DECODER      decoder3.0                                  4,194,560
DECODER      decoder3.1                                        512
DECODER      decoder3.3.conv1                              590,080
DECODER      decoder3.3.bn1                                    512
DECODER      decoder3.3.conv2                              590,080
DECODER      decoder3.3.bn2                                    512
DECODER      decoder2.0                                  1,048,704
DECODER      decoder2.1                                        256
DECODER      decoder2.3.conv1                              147,584
DECODER      decoder2.3.bn1                                    256
DECODER      decoder2.3.conv2                              147,584
DECODER      decoder2.3.bn2                                    256
DECODER      decoder1.0                                    262,208
DECODER      decoder1.1                                        128
DECODER      decoder1.3.conv1                               36,928
DECODER      decoder1.3.bn1                                    128
DECODER      decoder1.3.conv2                               36,928
DECODER      decoder1.3.bn2                                    128
FINAL        final.0                                        36,928
FINAL        final.1                                           128
FINAL        final.3                                           195
--------------------------------------------------------------------------------
ENCODER TOTAL:                                          56,430,720
BOTTLENECK TOTAL:                                       56,641,536
DECODER TOTAL:                                          20,169,152
FINAL LAYER TOTAL:                                          37,251
--------------------------------------------------------------------------------
GRAND TOTAL:                                           133,278,659

PARAMETER DISTRIBUTION:
----------------------------------------
Encoder:     42.3%
Bottleneck:  42.5%
Decoder:     15.1%
Final:        0.0%



====================================================================================================
MEMORY ANALYSIS - DEEP AUTOENCODER
====================================================================================================
Analysis for batch size: 8

Model Parameters Memory: 508.45 MB
Input Tensor Memory: 6.00 MB
Output Tensor Memory: 6.00 MB
Encoder 1 Activations: 32.00 MB
Encoder 2 Activations: 16.00 MB
Encoder 3 Activations: 8.00 MB
Encoder 4 Activations: 4.00 MB
Bottleneck Activations: 8.00 MB
Decoder 1 Activations: 16.00 MB
Decoder 2 Activations: 32.00 MB
Decoder 3 Activations: 64.00 MB
Decoder 4 Activations: 128.00 MB

Total Intermediate Activations: 308.00 MB

TRAINING MEMORY BREAKDOWN:
----------------------------------------
Model Parameters: 508.45 MB
Gradients: 508.45 MB
Optimizer States: 1016.91 MB
Input/Output: 12.00 MB
Intermediate Activations: 308.00 MB
----------------------------------------
Total Training Memory: 2353.82 MB
Total Training Memory: 2.30 GB

INFERENCE MEMORY BREAKDOWN:
----------------------------------------
Total Inference Memory: 828.45 MB
Total Inference Memory: 0.81 GB

RECOMMENDED GPU MEMORY:
----------------------------------------
Minimum for Training: 2.3 GB
Recommended for Training: 3.4 GB
Minimum for Inference: 0.8 GB

====================================================================================================

